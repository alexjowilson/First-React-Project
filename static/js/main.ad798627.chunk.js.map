{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpenseFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/NewComponentExpenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onSelectedNewYear","target","console","log","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","getMonth","NewComponentExpenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAppExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad798627.chunk.js","sourcesContent":["import './ExpenseDate.css';\n\nfunction ExpenseDate(props)\n{\n    /* extract month,year,day from props object */\n    const month = props.date.toLocaleString('en-US', {month:'long'});\n    const day = props.date.toLocaleString('en-US', {day:'2-digit'});\n    const year = props.date.getFullYear();\n\n    return (\n        <div className=\"expense-date\">\n            <div className=\"expense-date__month\">{month}</div>\n            <div className=\"expense-date__year\">{year}</div>\n            <div className=\"expense-date__day\">{day}</div>\n        </div>\n    );\n}\nexport default ExpenseDate;","import './Card.css';\n\nconst Card = (props) => {\n    const classes = 'card ' + props.className;\n    return <div className={classes}>{props.children}</div>\n}\nexport default Card;","import React from 'react';\n\nimport './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\n\nconst ExpenseItem = (props) => {\n\n\n    return(\n        <Card className=\"expense-item\">\n            <ExpenseDate date={props.date}/>\n            <div className=\"expense-item__description\">\n                <h2>{props.title}</h2>\n                <div className=\"expense-item__price\">${props.amount}</div>\n            </div>\n        </Card>\n    ); \n}\nexport default ExpenseItem;","import React from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './ExpensesList.css';\n\nconst ExpensesList = props => {\n\n    if(props.items.length === 0)\n    {\n        return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>; \n    }\n\n    return <ul className=\"expenses-list\">\n        {props.items.map((expense) => (\n            <ExpenseItem \n                key = {expense.id}\n                title = {expense.title} \n                amount = {expense.amount}\n                date = {expense.date}\n            />\n        ))}\n    </ul>\n};\n\nexport default ExpensesList;","import React from 'react';\n\nimport './ExpenseFilter.css';\n\nconst ExpensesFilter = (props) => {\n\n\n    /* function to handle when user chooses a year in drop-down list */\n    /* send it to NewComponentExpenses.js */\n    const handleDropDownChange = (event) =>\n    {\n\n        props.onSelectedNewYear(event.target.value);\n\n        console.log(\"the year you chose is \" + event.target.value);\n    }\n\n\n    return (\n    <div className='expenses-filter'>\n        <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={handleDropDownChange}>\n            <option value='2022'>2022</option>\n            <option value='2021'>2021</option>\n            <option value='2020'>2020</option>\n            <option value='2019'>2019</option>\n        </select>\n        </div>\n    </div>\n    );\n};\n\nexport default ExpensesFilter;","import React from 'react';\n\nimport './ChartBar.css';\n\nconst ChartBar = props => {\n\n\n    let barFillHeight = '0%';\n     \n    if(props.maxValue > 0)\n    {\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n    }\n\n    return (\n        <div className=\"chart-bar\">\n            <div className=\"chart-bar__inner\">\n                <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\n            </div>\n            <div className=\"chart-bar__label\">{props.label}</div>\n        </div>\n    );\n};\n\nexport default ChartBar;","import React from 'react';\n\nimport ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = props => {\n\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value); // gets numbers out of object array and convert it to array of numbers\n    const totalMax = Math.max(...dataPointValues); // pull out elements out of number array with the ... spread operator\n\n\n    return(\n        <div className=\"chart\">\n        {props.dataPoints.map(dataPoint => \n        <ChartBar \n            key={dataPoint.label} \n            value={dataPoint.value} \n            maxValue={totalMax} \n            label={dataPoint.label}/>)\n        } \n        </div>\n    );\n};\n\nexport default Chart;","import React from 'react';\n\nimport Chart from '../Chart/Chart';\n\nconst ExpensesChart = (props) => {\n\n    const chartDataPoints = [\n        {label: 'Jan' , value: 0},\n        {label: 'Feb' , value: 0},\n        {label: 'Mar' , value: 0},\n        {label: 'Apr' , value: 0},\n        {label: 'May' , value: 0},\n        {label: 'Jun' , value: 0},\n        {label: 'Jul' , value: 0},\n        {label: 'Aug' , value: 0},\n        {label: 'Sep' , value: 0},\n        {label: 'Oct' , value: 0},\n        {label: 'Nov' , value: 0},\n        {label: 'Dec' , value: 0},\n    ];\n\n    for(const expense of props.expenses)\n    {\n        const expenseMonth = expense.date.getMonth(); // starting at => January \n        chartDataPoints[expenseMonth].value += expense.amount\n    }\n\n\n    return <Chart dataPoints={chartDataPoints} />\n\n}\n\nexport default ExpensesChart;","import ExpensesList from './ExpensesList';\nimport './NewComponentExpenses.css';\nimport Card from '../UI/Card';\nimport ExpenseFilter from './ExpenseFilter';\nimport ExpensesChart from './ExpensesChart';\nimport React, { useState } from 'react';\n\nconst NewComponentExpenses = (props) => {\n\n    const[filteredYear, setFilteredYear] = useState('2021'); // setting default year\n\n    const selectedNewYear = (selectedYear) =>\n    {\n        setFilteredYear(selectedYear);\n        //console.log(\"The year chosen = \" + selectedYear);\n    }\n\n    /* filter parent array based on year the user selects */\n    const filteredExpenses = props.items.filter(expense =>{\n        console.log(\"filtered year is \" + filteredYear);\n        return expense.date.getFullYear().toString() === filteredYear;\n    }); \n\n    return (\n        <div>\n            <Card className=\"expenses\">\n                <ExpenseFilter \n                    selected={filteredYear} \n                    onSelectedNewYear={selectedNewYear}\n                /> \n                <ExpensesChart expenses={filteredExpenses}></ExpensesChart>\n                <ExpensesList items={filteredExpenses}/>\n            </Card>\n        </div>\n    );\n}\nexport default NewComponentExpenses;","import React, {useState} from 'react';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) =>\n{\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n\n    /* Used to update the whole object\n   const [userInput, setUserInput] = useState({\n        enteredTitle: '',\n        enteredAmount: '',\n        enteredDate: ''\n    });\n    */\n\n    /* Event Listeners */\n    const titleChangeHandler = (event) =>\n    {\n        setEnteredTitle(event.target.value);\n        \n        /* updating a whole object*/\n        /*\n        setUserInput({\n            ...userInput,\n            enteredTitle: event.target.value\n        });\n        */\n\n        /* // use this method if you depend on a previous state\n        setUserInput((prevState) => { \n            return { ...prevState, enteredTitle: event.target.value};\n        });\n        */\n\n    };\n\n    const amountChangeHandler = (event) => \n    {\n        setEnteredAmount(event.target.value);\n        /*\n        setUserInput({\n            ...userInput,\n            enteredAmount: event.target.value\n        });\n        */\n    }\n\n    const dateChangeHandler = (event) =>\n    {\n        setEnteredDate(event.target.value);\n\n        /*\n        setUserInput({\n            ...userInput,\n            enteredDate: event.target.value\n        });\n        */\n    }\n    \n\n    /* function to handle form submission */\n    const submitHandler = (event) =>\n    {\n        event.preventDefault(); // prevent HTTP request\n        \n        console.log(\"You just submitted some shit\");\n        \n\n        /* create object to send to parent, NewExpense */\n        const expenseData = {\n            title: enteredTitle,\n            amount: +enteredAmount,\n            date: new Date(enteredDate)\n        };\n\n        props.onSaveExpenseData(expenseData);\n        //console.log(expenseData);\n\n        /* clear form after submission */\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n    }\n\n\n    return <form onSubmit={submitHandler}>\n        <div className='new-expense__controls'>\n            <div className='new-expense__control'>\n                <label>Title</label>\n                <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\n            </div>\n            <div className='new-expense__control'>\n                <label>Amount</label>\n                <input type='number' value={enteredAmount} onChange={amountChangeHandler} min=\"0.01\" step=\"0.01\"/>\n            </div>\n            <div className='new-expense__control'>\n                <label>Date</label>\n                <input type='date' value={enteredDate} onChange={dateChangeHandler} min=\"2019-01-01\" step=\"2022-12-22\"/>\n            </div>\n        </div>\n        <div className=\"closeBtn\">\n            \n        </div>\n        <div className=\"new-expense__actions\">\n            <button type=\"button\" onClick={props.onCancel} >Cancel</button>\n            <button type=\"submit\">Add Expense</button>\n        </div>\n    </form>\n}\n\nexport default ExpenseForm;","import React, { useState } from 'react';\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\n\nconst NewExpense = (props) => \n{\n\n    const[isEditing, setIsEditing] = useState(false);\n\n    /* gets entered data from its child ExpenseForm */\n    const saveExpenseDataHandler = (enteredExpenseData) =>\n    {\n        const expenseData = {\n            ...enteredExpenseData, // copy all elements in enteredExpenseData\n            id: Math.random().toString() // add an additional attribute to this object\n        }\n        props.onAppExpense(expenseData);\n        setIsEditing(false); // close the form once submitted\n        //console.log(expenseData);\n    };\n\n    /* function to update isEditing attribute of this class */\n    const startEditingHandler = () => {\n        setIsEditing(true);\n    }\n\n    const stopEditingHandler = () =>{\n        setIsEditing(false);\n    }\n\n\n    return( \n    <div className=\"new-expense\">\n        {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n        {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} \n        onCancel={stopEditingHandler}/>}\n    </div>\n    );\n};\n\nexport default NewExpense;","import React, { useState } from 'react';\nimport NewComponentExpenses from './components/Expenses/NewComponentExpenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\n\n/* Dummy expenses */\nconst DUMMY_EXPENSES = [\n  { id: 'e1', title: 'FuboTV', amount: 33.01, date: new Date(2021, 12, 14) },\n  { id: 'e2', title: 'Xbox Game Pass', amount: 16.54, date: new Date(2021, 12, 22) },\n  { id: 'e3', title: 'Xfinity WiFi', amount: 84.99, date: new Date(2020, 11, 1) },\n  { id: 'e4', title: 'Apple News', amount: 5.00, date: new Date(2021, 11, 11) },\n  { id: 'e5', title: 'Rent', amount: 1200, date: new Date(2022, 0, 1) },\n  { id: 'e6', title: 'Xbox Game Pass', amount: 16.54, date: new Date(2022, 1, 22) },\n  { id: 'e7', title: 'FuboTV', amount: 33.01, date: new Date(2022, 2, 14) },\n];\n\nconst App = () => {\n  const[expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n\n\n  const addExpenseHandler = expense => {\n    console.log(\"In App.js SLIME\");\n\n    /* add the new expense and copy all existing expenses */\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses]\n    });\n  };\n\n\n  /* modern and easier way to create component */\n  return (\n    <div>\n      <NewExpense onAppExpense={addExpenseHandler}/>\n      <NewComponentExpenses items={expenses}></NewComponentExpenses> \n    </div>\n  );\n\n  /* old way of creating the element\n  return React.createElement(\n    'div',\n    {}, \n    React.createElement('h2', {}, \"Let's get started Slime!\"),\n    React.createElement(NewComponentExpenses, {items: expenses})\n  );\n  */\n}\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}