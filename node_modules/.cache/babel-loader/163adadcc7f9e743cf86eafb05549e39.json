{"ast":null,"code":"import _objectSpread from\"/Users/alexwilson/Documents/udemy/sec3-create-react-project/01-starting-setup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/alexwilson/Documents/udemy/sec3-create-react-project/01-starting-setup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./NewExpense.css';import ExpenseForm from'./ExpenseForm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NewExpense=function NewExpense(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEditing=_useState2[0],setIsEditing=_useState2[1];/* gets entered data from its child ExpenseForm */var saveExpenseDataHandler=function saveExpenseDataHandler(enteredExpenseData){var expenseData=_objectSpread(_objectSpread({},enteredExpenseData),{},{// copy all elements in enteredExpenseData\nid:Math.random().toString()// add an additional attribute to this object\n});props.onAppExpense(expenseData);setIsEditing(false);// close the form once submitted\n//console.log(expenseData);\n};/* function to update isEditing attribute of this class */var startEditingHandler=function startEditingHandler(){setIsEditing(true);};var stopEditingHandler=function stopEditingHandler(){setIsEditing(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense\",children:[!isEditing&&/*#__PURE__*/_jsx(\"button\",{onClick:startEditingHandler,children:\"Add New Expense\"}),isEditing&&/*#__PURE__*/_jsx(ExpenseForm,{onSaveExpenseData:saveExpenseDataHandler,onCancel:stopEditingHandler})]});};export default NewExpense;","map":{"version":3,"sources":["/Users/alexwilson/Documents/udemy/sec3-create-react-project/01-starting-setup/src/components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","isEditing","setIsEditing","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAppExpense","startEditingHandler","stopEditingHandler"],"mappings":"uYAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,kBAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CACnB,CAEI,cAAiCH,QAAQ,CAAC,KAAD,CAAzC,wCAAMI,SAAN,eAAiBC,YAAjB,eAEA,kDACA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,kBAAD,CAC/B,CACI,GAAMC,CAAAA,WAAW,gCACVD,kBADU,MACU;AACvBE,EAAE,CAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAyB;AAFhB,EAAjB,CAIAT,KAAK,CAACU,YAAN,CAAmBL,WAAnB,EACAH,YAAY,CAAC,KAAD,CAAZ,CAAqB;AACrB;AACH,CATD,CAWA,0DACA,GAAMS,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAC9BT,YAAY,CAAC,IAAD,CAAZ,CACH,CAFD,CAIA,GAAMU,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAK,CAC5BV,YAAY,CAAC,KAAD,CAAZ,CACH,CAFD,CAKA,mBACA,aAAK,SAAS,CAAC,aAAf,WACK,CAACD,SAAD,eAAc,eAAQ,OAAO,CAAEU,mBAAjB,6BADnB,CAEKV,SAAS,eAAI,KAAC,WAAD,EAAa,iBAAiB,CAAEE,sBAAhC,CACd,QAAQ,CAAES,kBADI,EAFlB,GADA,CAOH,CAlCD,CAoCA,cAAeb,CAAAA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\n\nconst NewExpense = (props) => \n{\n\n    const[isEditing, setIsEditing] = useState(false);\n\n    /* gets entered data from its child ExpenseForm */\n    const saveExpenseDataHandler = (enteredExpenseData) =>\n    {\n        const expenseData = {\n            ...enteredExpenseData, // copy all elements in enteredExpenseData\n            id: Math.random().toString() // add an additional attribute to this object\n        }\n        props.onAppExpense(expenseData);\n        setIsEditing(false); // close the form once submitted\n        //console.log(expenseData);\n    };\n\n    /* function to update isEditing attribute of this class */\n    const startEditingHandler = () => {\n        setIsEditing(true);\n    }\n\n    const stopEditingHandler = () =>{\n        setIsEditing(false);\n    }\n\n\n    return( \n    <div className=\"new-expense\">\n        {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n        {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} \n        onCancel={stopEditingHandler}/>}\n    </div>\n    );\n};\n\nexport default NewExpense;"]},"metadata":{},"sourceType":"module"}