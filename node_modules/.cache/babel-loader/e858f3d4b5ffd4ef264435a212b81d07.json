{"ast":null,"code":"import _slicedToArray from\"/Users/alexwilson/Documents/udemy/sec3-create-react-project/01-starting-setup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./ExpenseForm.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExpenseForm=function ExpenseForm(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),enteredTitle=_useState2[0],setEnteredTitle=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),enteredAmount=_useState4[0],setEnteredAmount=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),enteredDate=_useState6[0],setEnteredDate=_useState6[1];/* Used to update the whole object\n   const [userInput, setUserInput] = useState({\n        enteredTitle: '',\n        enteredAmount: '',\n        enteredDate: ''\n    });\n    */ /* Event Listeners */var titleChangeHandler=function titleChangeHandler(event){setEnteredTitle(event.target.value);/* updating a whole object*/ /*\n        setUserInput({\n            ...userInput,\n            enteredTitle: event.target.value\n        });\n        */ /* // use this method if you depend on a previous state\n        setUserInput((prevState) => { \n            return { ...prevState, enteredTitle: event.target.value};\n        });\n        */};var amountChangeHandler=function amountChangeHandler(event){setEnteredAmount(event.target.value);/*\n        setUserInput({\n            ...userInput,\n            enteredAmount: event.target.value\n        });\n        */};var dateChangeHandler=function dateChangeHandler(event){setEnteredDate(event.target.value);/*\n        setUserInput({\n            ...userInput,\n            enteredDate: event.target.value\n        });\n        */};/* function to handle form submission */var submitHandler=function submitHandler(event){event.preventDefault();// prevent HTTP request\nconsole.log(\"You just submitted some shit\");/* create object to send to parent, NewExpense */var expenseData={title:enteredTitle,amount:+enteredAmount,date:new Date(enteredDate)};props.onSaveExpenseData(expenseData);//console.log(expenseData);\n/* clear form after submission */setEnteredTitle('');setEnteredAmount('');setEnteredDate('');};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__control\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:enteredTitle,onChange:titleChangeHandler})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__control\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:enteredAmount,onChange:amountChangeHandler,min:\"0.01\",step:\"0.01\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__control\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:enteredDate,onChange:dateChangeHandler,min:\"2019-01-01\",step:\"2022-12-22\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"closeBtn\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Expense\"})]})]});};export default ExpenseForm;","map":{"version":3,"sources":["/Users/alexwilson/Documents/udemy/sec3-create-react-project/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","console","log","expenseData","title","amount","date","Date","onSaveExpenseData","onCancel"],"mappings":"oMAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAO,mBAAP,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CACpB,CACI,cAAwCF,QAAQ,CAAC,EAAD,CAAhD,wCAAOG,YAAP,eAAqBC,eAArB,eACA,eAA0CJ,QAAQ,CAAC,EAAD,CAAlD,yCAAOK,aAAP,eAAsBC,gBAAtB,eACA,eAAsCN,QAAQ,CAAC,EAAD,CAA9C,yCAAOO,WAAP,eAAoBC,cAApB,eAEA;AACJ;AACA;AACA;AACA;AACA;AACA,MAXA,CAaI,qBACA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAC3B,CACIN,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAEA,4BAHJ,CAII;AACR;AACA;AACA;AACA;AACA,UATI,CAWI;AACR;AACA;AACA;AACA,UAEK,CAlBD,CAoBA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACH,KAAD,CAC5B,CACIJ,gBAAgB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB,CACA;AACR;AACA;AACA;AACA;AACA,UACK,CATD,CAWA,GAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACJ,KAAD,CAC1B,CACIF,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CAEA;AACR;AACA;AACA;AACA;AACA,UACK,CAVD,CAaA,wCACA,GAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACL,KAAD,CACtB,CACIA,KAAK,CAACM,cAAN,GAAwB;AAExBC,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAGA,iDACA,GAAMC,CAAAA,WAAW,CAAG,CAChBC,KAAK,CAAEjB,YADS,CAEhBkB,MAAM,CAAE,CAAChB,aAFO,CAGhBiB,IAAI,CAAE,GAAIC,CAAAA,IAAJ,CAAShB,WAAT,CAHU,CAApB,CAMAL,KAAK,CAACsB,iBAAN,CAAwBL,WAAxB,EACA;AAEA,iCACAf,eAAe,CAAC,EAAD,CAAf,CACAE,gBAAgB,CAAC,EAAD,CAAhB,CACAE,cAAc,CAAC,EAAD,CAAd,CACH,CArBD,CAwBA,mBAAO,cAAM,QAAQ,CAAEO,aAAhB,wBACH,aAAK,SAAS,CAAC,uBAAf,wBACI,aAAK,SAAS,CAAC,sBAAf,wBACI,gCADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAEZ,YAA1B,CAAwC,QAAQ,CAAEM,kBAAlD,EAFJ,GADJ,cAKI,aAAK,SAAS,CAAC,sBAAf,wBACI,iCADJ,cAEI,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAEJ,aAA5B,CAA2C,QAAQ,CAAEQ,mBAArD,CAA0E,GAAG,CAAC,MAA9E,CAAqF,IAAI,CAAC,MAA1F,EAFJ,GALJ,cASI,aAAK,SAAS,CAAC,sBAAf,wBACI,+BADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAEN,WAA1B,CAAuC,QAAQ,CAAEO,iBAAjD,CAAoE,GAAG,CAAC,YAAxE,CAAqF,IAAI,CAAC,YAA1F,EAFJ,GATJ,GADG,cAeH,YAAK,SAAS,CAAC,UAAf,EAfG,cAkBH,aAAK,SAAS,CAAC,sBAAf,wBACI,eAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEZ,KAAK,CAACuB,QAArC,oBADJ,cAEI,eAAQ,IAAI,CAAC,QAAb,yBAFJ,GAlBG,GAAP,CAuBH,CA3GD,CA6GA,cAAexB,CAAAA,WAAf","sourcesContent":["import React, {useState} from 'react';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) =>\n{\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n\n    /* Used to update the whole object\n   const [userInput, setUserInput] = useState({\n        enteredTitle: '',\n        enteredAmount: '',\n        enteredDate: ''\n    });\n    */\n\n    /* Event Listeners */\n    const titleChangeHandler = (event) =>\n    {\n        setEnteredTitle(event.target.value);\n        \n        /* updating a whole object*/\n        /*\n        setUserInput({\n            ...userInput,\n            enteredTitle: event.target.value\n        });\n        */\n\n        /* // use this method if you depend on a previous state\n        setUserInput((prevState) => { \n            return { ...prevState, enteredTitle: event.target.value};\n        });\n        */\n\n    };\n\n    const amountChangeHandler = (event) => \n    {\n        setEnteredAmount(event.target.value);\n        /*\n        setUserInput({\n            ...userInput,\n            enteredAmount: event.target.value\n        });\n        */\n    }\n\n    const dateChangeHandler = (event) =>\n    {\n        setEnteredDate(event.target.value);\n\n        /*\n        setUserInput({\n            ...userInput,\n            enteredDate: event.target.value\n        });\n        */\n    }\n    \n\n    /* function to handle form submission */\n    const submitHandler = (event) =>\n    {\n        event.preventDefault(); // prevent HTTP request\n        \n        console.log(\"You just submitted some shit\");\n        \n\n        /* create object to send to parent, NewExpense */\n        const expenseData = {\n            title: enteredTitle,\n            amount: +enteredAmount,\n            date: new Date(enteredDate)\n        };\n\n        props.onSaveExpenseData(expenseData);\n        //console.log(expenseData);\n\n        /* clear form after submission */\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n    }\n\n\n    return <form onSubmit={submitHandler}>\n        <div className='new-expense__controls'>\n            <div className='new-expense__control'>\n                <label>Title</label>\n                <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\n            </div>\n            <div className='new-expense__control'>\n                <label>Amount</label>\n                <input type='number' value={enteredAmount} onChange={amountChangeHandler} min=\"0.01\" step=\"0.01\"/>\n            </div>\n            <div className='new-expense__control'>\n                <label>Date</label>\n                <input type='date' value={enteredDate} onChange={dateChangeHandler} min=\"2019-01-01\" step=\"2022-12-22\"/>\n            </div>\n        </div>\n        <div className=\"closeBtn\">\n            \n        </div>\n        <div className=\"new-expense__actions\">\n            <button type=\"button\" onClick={props.onCancel} >Cancel</button>\n            <button type=\"submit\">Add Expense</button>\n        </div>\n    </form>\n}\n\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}