{"ast":null,"code":"var _jsxFileName = \"/Users/alexwilson/Documents/udemy/sec3-create-react-project/01-starting-setup/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  /* Used to update the whole object\n  const [userInput, setUserInput] = useState({\n      enteredTitle: '',\n      enteredAmount: '',\n      enteredDate: ''\n  });\n  */\n\n  /* Event Listeners */\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n    /* updating a whole object*/\n\n    /*\n    setUserInput({\n        ...userInput,\n        enteredTitle: event.target.value\n    });\n    */\n\n    /* // use this method if you depend on a previous state\n    setUserInput((prevState) => { \n        return { ...prevState, enteredTitle: event.target.value};\n    });\n    */\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n    /*\n    setUserInput({\n        ...userInput,\n        enteredAmount: event.target.value\n    });\n    */\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n    /*\n    setUserInput({\n        ...userInput,\n        enteredDate: event.target.value\n    });\n    */\n  };\n  /* function to handle form submission */\n\n\n  const submitHandler = event => {\n    event.preventDefault(); // prevent HTTP request\n\n    /* create object to send to parent, NewExpense */\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.onSaveExpenseData(expenseData); //console.log(expenseData);\n\n    /* clear form after submission */\n\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: enteredAmount,\n          onChange: amountChangeHandler,\n          min: \"0.01\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: enteredDate,\n          onChange: dateChangeHandler,\n          min: \"2019-01-01\",\n          step: \"2022-12-22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/Users/alexwilson/Documents/udemy/sec3-create-react-project/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) =>\n{\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n\n    /* Used to update the whole object\n   const [userInput, setUserInput] = useState({\n        enteredTitle: '',\n        enteredAmount: '',\n        enteredDate: ''\n    });\n    */\n\n    /* Event Listeners */\n    const titleChangeHandler = (event) =>\n    {\n        setEnteredTitle(event.target.value);\n        \n        /* updating a whole object*/\n        /*\n        setUserInput({\n            ...userInput,\n            enteredTitle: event.target.value\n        });\n        */\n\n        /* // use this method if you depend on a previous state\n        setUserInput((prevState) => { \n            return { ...prevState, enteredTitle: event.target.value};\n        });\n        */\n\n    };\n\n    const amountChangeHandler = (event) => \n    {\n        setEnteredAmount(event.target.value);\n        /*\n        setUserInput({\n            ...userInput,\n            enteredAmount: event.target.value\n        });\n        */\n    }\n\n    const dateChangeHandler = (event) =>\n    {\n        setEnteredDate(event.target.value);\n\n        /*\n        setUserInput({\n            ...userInput,\n            enteredDate: event.target.value\n        });\n        */\n    }\n    \n\n    /* function to handle form submission */\n    const submitHandler = (event) =>\n    {\n        event.preventDefault(); // prevent HTTP request\n        \n        /* create object to send to parent, NewExpense */\n        const expenseData = {\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate)\n        };\n\n        props.onSaveExpenseData(expenseData);\n        //console.log(expenseData);\n\n        /* clear form after submission */\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n    }\n\n\n    return <form onSubmit={submitHandler}>\n        <div className='new-expense__controls'>\n            <div className='new-expense__control'>\n                <label>Title</label>\n                <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\n            </div>\n            <div className='new-expense__control'>\n                <label>Amount</label>\n                <input type='number' value={enteredAmount} onChange={amountChangeHandler} min=\"0.01\" step=\"0.01\"/>\n            </div>\n            <div className='new-expense__control'>\n                <label>Date</label>\n                <input type='date' value={enteredDate} onChange={dateChangeHandler} min=\"2019-01-01\" step=\"2022-12-22\"/>\n            </div>\n        </div>\n        <div className=\"new-expense__actions\">\n            <button type=\"submit\">Add Expense</button>\n        </div>\n    </form>\n}\n\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}