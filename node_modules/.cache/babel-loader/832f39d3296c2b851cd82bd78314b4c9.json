{"ast":null,"code":"var _jsxFileName = \"/Users/alexwilson/Documents/udemy/sec3-create-react-project/01-starting-setup/src/components/NewExpense/NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpense = props => {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n  /* gets entered data from its child ExpenseForm */\n\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = { ...enteredExpenseData,\n      // copy all elements in enteredExpenseData\n      id: Math.random().toString() // add an additional attribute to this object\n\n    };\n    props.onAppExpense(expenseData); //console.log(expenseData);\n  };\n  /* function to update isEditing attribute of this class */\n\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startEditingHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewExpense, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["/Users/alexwilson/Documents/udemy/sec3-create-react-project/01-starting-setup/src/components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","isEditing","setIsEditing","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAppExpense","startEditingHandler","stopEditingHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IACnB;AAAA;;AAEI,QAAK,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAAzC;AAEA;;AACA,QAAMM,sBAAsB,GAAIC,kBAAD,IAC/B;AACI,UAAMC,WAAW,GAAG,EAChB,GAAGD,kBADa;AACO;AACvBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAFY,CAEa;;AAFb,KAApB;AAIAT,IAAAA,KAAK,CAACU,YAAN,CAAmBL,WAAnB,EALJ,CAMI;AACH,GARD;AAUA;;;AACA,QAAMM,mBAAmB,GAAG,MAAM;AAC9BT,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAIA,QAAMU,kBAAkB,GAAG,MAAK;AAC5BV,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAFD;;AAKA,sBACA;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACK,CAACD,SAAD,iBAAc;AAAQ,MAAA,OAAO,EAAEU,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADnB,EAEKV,SAAS,iBAAI,QAAC,WAAD;AAAa,MAAA,iBAAiB,EAAEE;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAMH,CAhCD;;GAAMJ,U;;KAAAA,U;AAkCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\n\nconst NewExpense = (props) => \n{\n\n    const[isEditing, setIsEditing] = useState(false);\n\n    /* gets entered data from its child ExpenseForm */\n    const saveExpenseDataHandler = (enteredExpenseData) =>\n    {\n        const expenseData = {\n            ...enteredExpenseData, // copy all elements in enteredExpenseData\n            id: Math.random().toString() // add an additional attribute to this object\n        }\n        props.onAppExpense(expenseData);\n        //console.log(expenseData);\n    };\n\n    /* function to update isEditing attribute of this class */\n    const startEditingHandler = () => {\n        setIsEditing(true);\n    }\n\n    const stopEditingHandler = () =>{\n        setIsEditing(false);\n    }\n\n\n    return( \n    <div className=\"new-expense\">\n        {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n        {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}/>}\n    </div>\n    );\n};\n\nexport default NewExpense;"]},"metadata":{},"sourceType":"module"}